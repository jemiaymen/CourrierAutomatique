package com.model;

// Generated 23 mars 2015 12:42:15 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "courrier", uniqueConstraints = @UniqueConstraint(columnNames = "login"))
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private String role;
	private String login;
	private String pw;
	private String prenom;
	private String nom;
	private String cin;
	private String adress;
	private String tel;
	private Set<Courrier> courriersForDfuid = new HashSet<Courrier>(0);
	private Set<Courrier> courriersForChfuid = new HashSet<Courrier>(0);
	private Set<Courrier> courriersForChuid = new HashSet<Courrier>(0);
	private Set<Courrier> courriersForChiuid = new HashSet<Courrier>(0);
	private Set<Loc> locs = new HashSet<Loc>(0);

	public User() {
	}

	public User(String role, String login, String pw, String prenom,
			String nom, String cin, String adress, String tel) {
		this.role = role;
		this.login = login;
		this.pw = pw;
		this.prenom = prenom;
		this.nom = nom;
		this.cin = cin;
		this.adress = adress;
		this.tel = tel;
	}

	public User(String role, String login, String pw, String prenom,
			String nom, String cin, String adress, String tel,
			Set<Courrier> courriersForDfuid, Set<Courrier> courriersForChfuid,
			Set<Courrier> courriersForChuid, Set<Courrier> courriersForChiuid,
			Set<Loc> locs) {
		this.role = role;
		this.login = login;
		this.pw = pw;
		this.prenom = prenom;
		this.nom = nom;
		this.cin = cin;
		this.adress = adress;
		this.tel = tel;
		this.courriersForDfuid = courriersForDfuid;
		this.courriersForChfuid = courriersForChfuid;
		this.courriersForChuid = courriersForChuid;
		this.courriersForChiuid = courriersForChiuid;
		this.locs = locs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "role", nullable = false, length = 1)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Column(name = "login", unique = true, nullable = false, length = 60)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "pw", nullable = false, length = 60)
	public String getPw() {
		return this.pw;
	}

	public void setPw(String pw) {
		this.pw = pw;
	}

	@Column(name = "prenom", nullable = false, length = 120)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "nom", nullable = false, length = 120)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "cin", nullable = false, length = 10)
	public String getCin() {
		return this.cin;
	}

	public void setCin(String cin) {
		this.cin = cin;
	}

	@Column(name = "adress", nullable = false, length = 250)
	public String getAdress() {
		return this.adress;
	}

	public void setAdress(String adress) {
		this.adress = adress;
	}

	@Column(name = "tel", nullable = false, length = 20)
	public String getTel() {
		return this.tel;
	}

	public void setTel(String tel) {
		this.tel = tel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByDfuid")
	public Set<Courrier> getCourriersForDfuid() {
		return this.courriersForDfuid;
	}

	public void setCourriersForDfuid(Set<Courrier> courriersForDfuid) {
		this.courriersForDfuid = courriersForDfuid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByChfuid")
	public Set<Courrier> getCourriersForChfuid() {
		return this.courriersForChfuid;
	}

	public void setCourriersForChfuid(Set<Courrier> courriersForChfuid) {
		this.courriersForChfuid = courriersForChfuid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByChuid")
	public Set<Courrier> getCourriersForChuid() {
		return this.courriersForChuid;
	}

	public void setCourriersForChuid(Set<Courrier> courriersForChuid) {
		this.courriersForChuid = courriersForChuid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByChiuid")
	public Set<Courrier> getCourriersForChiuid() {
		return this.courriersForChiuid;
	}

	public void setCourriersForChiuid(Set<Courrier> courriersForChiuid) {
		this.courriersForChiuid = courriersForChiuid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Loc> getLocs() {
		return this.locs;
	}

	public void setLocs(Set<Loc> locs) {
		this.locs = locs;
	}

}
